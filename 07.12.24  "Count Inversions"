Count Inversions  https://www.geeksforgeeks.org/problems/inversion-of-array-1587115620/1

class Solution {
  public:
    // Function to count inversions in the array.
    
    int merge(vector<int>& arr, int left, int mid, int right ){
        int count = 0;
        vector<int> temp;
        int i = left, j = mid+1;
        
        while(i<= mid && j<=right){
            if(arr[i]<=arr[j]){
                temp.push_back(arr[i++]);
            }else{
                count += (mid+1 -i);
                temp.push_back(arr[j++]);
            }
        }
        
        while(i<=mid) temp.push_back(arr[i++]);
        while(j<=right) temp.push_back(arr[j++]);
        for(int k = left; k<=right; k++) arr[k] = temp[k-left];
        return count;
        
    }
    
    int mergeSort(vector<int>& arr, int left, int right){
        if(left >= right) return 0;
        
        int mid = left + (right - left)/2;
        int count = 0;
        
        count += mergeSort(arr, left, mid);
        count += mergeSort(arr, mid+1, right );
        count += merge(arr, left , mid, right);
        
        return count;
    }
    
    int inversionCount(vector<int> &arr) {
        // Your Code Here
        
        return mergeSort(arr, 0, arr.size()-1);
    }
};
