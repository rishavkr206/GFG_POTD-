Largest number in K swaps


class Solution {
  public:
    int findMissing(vector<int> &arr) {
        int diff, prevDiff = arr[1] - arr[0];
        int a = arr[0], n = arr.size();
        
        for(int i=1; i<n-1; i++){
            diff = arr[i+1] - arr[i];
            if(diff == prevDiff)
                break;
            else if(abs(prevDiff) > abs(diff))
                prevDiff = diff;
        }
        
        for(int i=1; i<n; i++){
            int ele = a + i*prevDiff;
            
            if(ele != arr[i])   
                return ele;
        }
        
        return a + n*prevDiff;
        
    }
